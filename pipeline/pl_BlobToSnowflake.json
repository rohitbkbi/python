{
	"name": "pl_BlobToSnowflake",
	"properties": {
		"activities": [
			{
				"name": "Get Filenames",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ProcessCSVFiles",
						"type": "DatasetReference",
						"parameters": {
							"file_name": " ",
							"folder_path": "@formatDateTime(utcNow(), 'yyyy-MM-dd')"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "InsertDataintoSnowflakeTable",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Filenames",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Filenames').output.childItems",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Copy CSVToSnowflakeGold",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "SnowflakeV2Sink",
									"preCopyScript": {
										"value": "@concat('TRUNCATE TABLE DW_GOLD.GOLD_LAYER.', toUpper(replace(replace(item().name, '.csv', ''), '''', '')), ';')",
										"type": "Expression"
									},
									"importSettings": {
										"type": "SnowflakeImportCopyCommand"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ProcessCSVFiles",
									"type": "DatasetReference",
									"parameters": {
										"file_name": {
											"value": "@item().name",
											"type": "Expression"
										},
										"folder_path": "@formatDateTime(utcNow(), 'yyyy-MM-dd')"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SnowflakeDataset",
									"type": "DatasetReference",
									"parameters": {
										"Tablename": {
											"value": "@toUpper(replace(replace(item().name, '.csv', ''), '''', ''))",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "UpdateFlagforpl_BlobToSnowflake",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "InsertDataintoSnowflakeTable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeV2Source",
						"query": "UPDATE DW_GOLD.GOLD_LAYER.PIPELINELOGAUTOMATION \nSET PROCESSED_FLAG = 'Yes' WHERE PIPELINE_ID = 3\nAND PIPELINE_NAME = 'pl_BlobToSnowflake';",
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "SnowflakeDataset",
						"type": "DatasetReference",
						"parameters": {
							"Tablename": "PIPELINELOGAUTOMATION"
						}
					}
				}
			}
		],
		"variables": {
			"Tablename": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-05-19T09:19:38Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}